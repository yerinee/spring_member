<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 1. datasource : connection pool - 기본적으로 필요한 4가지
		 2. SqlSessionFactoryBean : datasource를 이용하여 mybatis 설정을 담당
		 3. SqlSessionTemplate : sqlSessionFactory객체로 부터 생성하며
		 						 mybatis를 통해 sql을 실행할 수 있는 객체(sqlSession)
	-->
	<!-- 1. -->
	<context:property-placeholder location="classpath:kr/or/ddit/config/db/db.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="url" value="${jdbc.url}"/>
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 2. (mybatisUtil 역할) -->
	<!-- 
		 SqlSessionFactoryBean 객체는 객체를 생성하는 역할을 담당하는 객체
	     스프링 프레임워크는 스프링 빈을 생성시 객체가 FactoryBean 인터페이스를 구현한 경우
	     인터페이스에 정의되어 있는 getObject() 메소드가 리턴하는 객체를 스프링 빈으로 등록한다. 
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:kr/or/ddit/config/db/mybatis-config.xml"/>
		<!-- 다른 스프링빈을 참조하는것이기 때문에 value가 아닌 레퍼런스를 이용한다. -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 3. sqlSession -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 기본생성자가 존재하지 않아 에러가 남으로 기본생성자를 만들어준다. -->
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
</beans>
